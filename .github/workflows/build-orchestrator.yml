name: Build Orchestrator

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact-name: spatialshot-orchestrator-linux-x86_64
            archive-ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact-name: spatialshot-orchestrator-windows-x86_64
            archive-ext: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact-name: spatialshot-orchestrator-macos-x86_64
            archive-ext: tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: packages/orchestrator

      - name: Prepare dist directory (all OS)
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/spatialshot-orchestrator${{ contains(matrix.os, 'windows') && '.exe' || '' }} dist/

      - name: Bundle scripts and archive (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          # Bundle Linux-specific scripts
          cp packages/orchestrator/src/platform/linux/hm-monitors.sh dist/ || true
          cp packages/orchestrator/src/platform/linux/sc-grabber.sh dist/ || true
          # Create single tar.gz
          tar -czf ${{ matrix.artifact-name }}.${{ matrix.archive-ext }} -C dist .

      - name: Bundle scripts and archive (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          # Bundle Windows-specific scripts
          Copy-Item packages/orchestrator/src/platform/win32/hm-monitors.ps1 dist/ -ErrorAction SilentlyContinue
          Copy-Item packages/orchestrator/src/platform/win32/sc-grabber.ps1 dist/ -ErrorAction SilentlyContinue
          # Create single zip
          Compress-Archive -Path dist/* -DestinationPath ${{ matrix.artifact-name }}.${{ matrix.archive-ext }}

      - name: Bundle scripts and archive (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          # Bundle macOS-specific scripts
          cp packages/orchestrator/src/platform/darwin/hm-monitors.sh dist/ || true
          cp packages/orchestrator/src/platform/darwin/sc-grabber.sh dist/ || true
          # Create single tar.gz
          tar -czf ${{ matrix.artifact-name }}.${{ matrix.archive-ext }} -C dist .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}.${{ matrix.archive-ext }}

      - name: Upload to release (on tag)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.artifact-name }}.${{ matrix.archive-ext }}