# place at .github/workflows/build-ycaptool.yml

name: Build ycaptool

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      QT_VERSION: 6.8.0

    steps:
      - uses: actions/checkout@v4

      - name: Set QT_INSTALL_DIR
        run: echo "QT_INSTALL_DIR=${{ runner.temp }}/qt-static" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libgl1-mesa-dev libfontconfig1-dev libfreetype6-dev libx11-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libx11-xcb-dev libxcb-glx0-dev libxkbcommon-x11-dev libxkbcommon-dev libdbus-1-dev python3 gperf bison flex

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v4
        with:
          path: ${{ env.QT_INSTALL_DIR }}
          key: qt-static-linux-${{ env.QT_VERSION }}-${{ runner.os }}-${{ hashFiles('ycaptool.pro') }}

      - name: Download and build Qt static if not cached
        if: ${{ steps.cache-qt.outputs.cache-hit != 'true' }}
        run: |
          wget https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/single/qt-everywhere-src-${QT_VERSION}.tar.xz
          tar xJf qt-everywhere-src-${QT_VERSION}.tar.xz
          cd qt-everywhere-src-${QT_VERSION}
          ./configure -static -release -no-pch -prefix "${{ env.QT_INSTALL_DIR }}" -skip qtwebengine -nomake tests -nomake examples -opensource -confirm-license
          make -j$(nproc)
          make install

      - name: Build ycaptool
        run: |
          export PATH="${{ env.QT_INSTALL_DIR }}/bin:$PATH"
          qmake ycaptool.pro
          make -j$(nproc)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ycaptool-linux
          path: ycaptool
